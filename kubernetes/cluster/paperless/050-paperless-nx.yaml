---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-data
  namespace: paperless
  labels:
    app.kubernetes.io/name: paperless-data
    app.kubernetes.io/component: paperless-ngx
    app.kubernetes.io/part-of: paperless
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-media
  namespace: paperless
  labels:
    app.kubernetes.io/name: paperless-media
    app.kubernetes.io/component: paperless-ngx
    app.kubernetes.io/part-of: paperless
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-export
  namespace: paperless
  labels:
    app.kubernetes.io/name: paperless-export
    app.kubernetes.io/component: paperless-ngx
    app.kubernetes.io/part-of: paperless
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-consume
  namespace: paperless
  labels:
    app.kubernetes.io/name: paperless-consume
    app.kubernetes.io/component: paperless-ngx
    app.kubernetes.io/part-of: paperless
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx
  namespace: paperless
  labels:
    app.kubernetes.io/name: paperless-ngx
    app.kubernetes.io/component: paperless-ngx
    app.kubernetes.io/part-of: paperless
    app.kubernetes.io/version: "2.2.1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: paperless-ngx
      app.kubernetes.io/part-of: paperless
  template:
    metadata:
      labels:
        app.kubernetes.io/name: paperless-ngx
        app.kubernetes.io/component: paperless-ngx
        app.kubernetes.io/part-of: paperless
        app.kubernetes.io/version: "2.2.1"
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: paperless-data
        - name: media
          persistentVolumeClaim:
            claimName: paperless-media
        - name: consume
          persistentVolumeClaim:
            claimName: paperless-consume
        - name: export
          persistentVolumeClaim:
            claimName: paperless-export
      containers:
        - name: paperless-ngx
          image: ghcr.io/paperless-ngx/paperless-ngx:2.2.1
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 120
            periodSeconds: 3
            failureThreshold: 10
          env:
            - name: PAPERLESS_REDIS
              value: redis://redis:6379
            - name: PAPERLESS_TIKA_ENABLED
              value: "1"
            - name: PAPERLESS_TIKA_ENDPOINT
              value: http://tika:9998
            - name: PAPERLESS_TIKA_GOTENBERG_ENDPOINT
              value: http://gotenberg:3000
            - name: PAPERLESS_WEBSERVER_WORKERS
              value: "1"
            - name: PAPERLESS_CSRF_TRUSTED_ORIGINS
              value: https://paperless.shark-butterfly.ts.net,http://localhost:8000
            - name: PAPERLESS_CORS_ALLOWED_HOSTS
              value: https://paperless.shark-butterfly.ts.net,http://localhost:8000
          ports:
            - containerPort: 8000
              name: http
          volumeMounts:
            - name: data
              mountPath: /usr/src/paperless/data
            - name: media
              mountPath: /usr/src/paperless/media
            - name: export
              mountPath: /usr/src/paperless/export
            - name: consume
              mountPath: /usr/src/paperless/consume
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 500m
              memory: 600Mi
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx
  namespace: paperless
  labels:
    app.kubernetes.io/name: paperless-ngx
    app.kubernetes.io/component: paperless-ngx
    app.kubernetes.io/part-of: paperless
spec:
  ports:
    - name: http
      port: 8000
      targetPort: http
  selector:
    app.kubernetes.io/name: paperless-ngx
    app.kubernetes.io/part-of: paperless
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: paperless-ngx
  namespace: paperless
spec:
  ingressClassName: tailscale
  tls:
    - hosts:
        - paperless
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: paperless-ngx
            port:
              name: http
---
