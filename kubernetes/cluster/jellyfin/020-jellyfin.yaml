---
kind: Secret
apiVersion: v1
metadata:
  name: manage-media
  namespace: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: jellyfin
type: Opaque
data:
  username: YWRtaW5pc3RyYXRvcg==
  password: JDJhJDEyJHJZbHE3WC4wd012Y1gyWFhXV2NzWS5TWTROQXJMNTdUZUIwNTA3S1o4RXhlaE1GWkdyV1ou # bcrypt hash
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: jellyfin
    app.kubernetes.io/version: "10.8.13"
spec:
  serviceName: jellyfin
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: jellyfin
        app.kubernetes.io/version: "10.8.13"
    spec:
      containers:
        - name: jellyfin
          image: jellyfin/jellyfin:10.8.13-1
          ports:
            - name: jellyfin
              containerPort: 8096
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config/
            - name: cache
              mountPath: /cache/
            - name: media
              mountPath: /media/
          resources:
            requests:
              cpu: 100m
              memory: 48Mi
            limits:
              cpu: 1000m
              memory: 1.5Gi
        - name: filebrowser
          image: filebrowser/filebrowser:v2.27.0
          env:
            - name: FB_PORT
              value: "8000"
            - name: FB_ROOT
              value: /media/
            - name: FB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: manage-media
                  key: username
            - name: FB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: manage-media
                  key: password
          ports:
            - name: file-browser
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: media
              mountPath: /media/
          resources:
            requests:
              cpu: 100m
              memory: 48Mi
            limits:
              cpu: 200m
              memory: 500Gi
  volumeClaimTemplates:
    - metadata:
        name: config
        namespace: jellyfin
        labels:
          app.kubernetes.io/name: jellyfin
          app.kubernetes.io/component: server
          app.kubernetes.io/part-of: jellyfin
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: longhorn
        resources:
          requests:
            storage: 200Mi
    - metadata:
        name: cache
        namespace: jellyfin
        labels:
          app.kubernetes.io/name: jellyfin
          app.kubernetes.io/component: server
          app.kubernetes.io/part-of: jellyfin
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: longhorn
        resources:
          requests:
            storage: 2Gi
    - metadata:
        name: media
        namespace: jellyfin
        labels:
          app.kubernetes.io/name: jellyfin
          app.kubernetes.io/component: server
          app.kubernetes.io/part-of: jellyfin
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: longhorn
        resources:
          requests:
            storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: jellyfin
spec:
  ports:
    - name: jellyfin
      port: 8096
      targetPort: jellyfin
    - name: file-browser
      port: 8000
      targetPort: file-browser
  selector:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/component: server
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin
  namespace: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/component: server
spec:
  ingressClassName: tailscale
  tls:
    - hosts:
        - media
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: jellyfin
                port:
                  name: jellyfin
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: file-browser
  namespace: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/component: file-browser
spec:
  ingressClassName: tailscale
  tls:
    - hosts:
        - manage-media
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: jellyfin
                port:
                  name: file-browser
---
